# Main path variables
GIT_HOME 	=
RTL_PATH    = $(GIT_HOME)/
TB_PATH     = $(GIT_HOME)/verif/cpu
MODEL       = $(GIT_HOME)/

# RTL and SV files
RTL_SRC    = 
SV_SRC     = $(TB_PATH)/tb.inc.sv
TOP        = cpu_tb_top

SEED = random
SIM_OPTS='-c'

# Model files
MODEL_SRC = $(MODEL)/alu.c $(MODEL)/model.c
MODEL_LIB_NAME = model
MODEL_LIB_DIR = $(RUN)/model_lib
MODEL_SO = $(MODEL_LIB_DIR)/$(MODEL_LIB_NAME).so
MODEL_VSIM_OPT= -sv_lib $(MODEL_LIB_DIR)/$(MODEL_LIB_NAME)

ifeq ($(SEED), random)
	VCS_SET_SEED = +ntb_random_seed_automatic
else
	VCS_SET_SEED = +ntb_random_seed=$(SEED)
endif

ARCH = $(shell uname -m)

ifeq ($(ARCH), x86_64)
	ARCH_OPTS = -full64
else
	ARCH_OPTS =
endif
ifeq ($(MODE), DEBUG)
	ELAB_OPTS += -debug_acc+all -lca
endif
ifeq ($(MODE), COVER)
	ELAB_OPTS += -cm line+cond+tgl+branch
	SIM_OPTS  += -cm_name $(COVER_SUFFIX) -cm line+cond+branch
endif

#VLOG = UVM_HOME=$(UVM_HOME) VCS_HOME=$(VCS_HOME) BENCH_HOME=$(BENCH_HOME) RTL_PATH=$(RTL_PATH) \
#       $(VCS_HOME)/bin/vlogan

VLOG = vlog
VLOG_OPTS =  -sv -l vlogan.log +incdir+$(RTL_PATH) +incdir+$(TB_PATH)

VSIM = vsim
SIM_OPTS  = -sv_seed $(SEED) -l run.log -c

analyze:
	vlib work;       \
	vmap work work;  \
	$(VLOG) $(ARCH_OPTS) $(VLOG_OPTS) $(RTL_SRC) $(SV_SRC)

sim: analyze
	$(VSIM) -novopt -do 'run -all' $(SIM_OPTS) $(TOP)

build_c:
	mkdir -p $(MODEL_LIB_DIR)
	gcc -fPIC -shared -I$(MTI_HOME)/include -o $(MODEL_SO) $(MODEL_SRC)

# Cleaning project files
.PHONY: clean
clean:
	rm -rf  $(RUN)/*
	rm -f .mod*
	rm -rf .ht*

